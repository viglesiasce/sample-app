apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata: # kpt-merge: default/info-getter
  name: info-getter
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - redis.cnrm.cloud.google.com
  resources:
  - redisinstances
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata: # kpt-merge: default/get-info
  name: get-info
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: info-getter
subjects:
- kind: ServiceAccount
  name: default
---
apiVersion: v1
kind: Service
metadata: # kpt-merge: /sample-app
  name: sample-app
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: sample-app
---
apiVersion: apps/v1
kind: Deployment
metadata: # kpt-merge: /sample-app
  name: sample-app
spec:
  selector:
    matchLabels:
      app: sample-app
      env: prod
  template:
    metadata:
      labels:
        app: sample-app
        env: prod
      name: sample-app
    spec:
      containers:
      - env:
        - name: VERSION
          value: prod
        image: sample-app
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        name: sample-app
        ports:
        - containerPort: 8080
          name: sample-app
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 20
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
