apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-getter-dev
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: get-pods-dev
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-getter-dev
subjects:
- kind: ServiceAccount
  name: default
---
apiVersion: v1
kind: Service
metadata:
  name: gceme-backend-dev
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: gceme
    role: backend
---
apiVersion: v1
kind: Service
metadata:
  name: redis-dev
spec:
  ports:
  - name: redis
    port: 6379
    protocol: TCP
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gceme-backend-dev
spec:
  selector:
    matchLabels:
      app: gceme
      env: dev
      role: backend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: gceme
        env: dev
        role: backend
      name: backend
    spec:
      containers:
      - env:
        - name: VERSION
          value: dev
        - name: REDIS_URL
          value: redis-dev:6379
        image: sample-app-backend
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8080
          name: backend
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 5
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-dev
spec:
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
      name: redis
    spec:
      containers:
      - command:
        - redis-server
        env:
        - name: MASTER
          value: "true"
        image: redis:5.0.4
        name: redis
        ports:
        - containerPort: 6379
        resources:
          limits:
            cpu: "0.3"
        volumeMounts:
        - mountPath: /redis-master-data
          name: data
      volumes:
      - emptyDir: {}
        name: data
