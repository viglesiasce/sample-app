apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-getter-prod
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: get-pods-prod
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-getter-prod
subjects:
- kind: ServiceAccount
  name: default
---
apiVersion: v1
kind: Service
metadata:
  name: gceme-backend-prod
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: gceme
    role: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gceme-backend-prod
spec:
  replicas: 2
  selector:
    matchLabels:
      app: gceme
      env: production
      role: backend
  template:
    metadata:
      labels:
        app: gceme
        env: production
        role: backend
      name: backend
    spec:
      containers:
      - env:
        - name: VERSION
          value: production
        - name: REDIS_URL
          value: 172.30.0.11:6379
        image: sample-app-backend
        imagePullPolicy: Always
        name: backend
        ports:
        - containerPort: 8080
          name: backend
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 5
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
---
apiVersion: redis.cnrm.cloud.google.com/v1beta1
kind: RedisInstance
metadata:
  name: redis-prod
spec:
  authorizedNetworkRef:
    name: default
  connectMode: PRIVATE_SERVICE_ACCESS
  displayName: Redis Instance
  memorySizeGb: 16
  region: us-central1
  tier: BASIC
