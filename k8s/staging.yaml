apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-getter-staging
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: get-pods-staging
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-getter-staging
subjects:
- kind: ServiceAccount
  name: default
---
apiVersion: v1
kind: Service
metadata:
  name: sample-app-staging
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: sample-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-app-staging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample-app
      env: staging
  template:
    metadata:
      labels:
        app: sample-app
        env: staging
      name: sample-app
    spec:
      containers:
      - env:
        - name: VERSION
          value: staging
        - name: REDIS_URL
          value: 172.30.0.3:6379
        image: sample-app
        imagePullPolicy: Always
        name: sample-app
        ports:
        - containerPort: 8080
          name: sample-app
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 5
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
---
apiVersion: redis.cnrm.cloud.google.com/v1beta1
kind: RedisInstance
metadata:
  name: redis-staging
spec:
  authorizedNetworkRef:
    name: default
  connectMode: PRIVATE_SERVICE_ACCESS
  displayName: Redis Instance
  memorySizeGb: 16
  region: us-central1
  tier: BASIC
